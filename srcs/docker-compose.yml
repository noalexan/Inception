version: '3'

services:

  nginx:
    container_name: nginx
    build:
      context: requirements/nginx
      args:
        - DOMAIN_NAME=${DOMAIN_NAME}
        - CERTS_=${CERTS_}
    volumes:
      - data-wordpress:/wordpress
    networks:
      - default
    ports:
      - 443:443
    depends_on:
      - wordpress
    restart: always

  wordpress:
    container_name: wordpress
    build:
      context: requirements/wordpress
      args:
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - data-wordpress:/wordpress
    networks:
      - default
    depends_on:
      - mariadb
    restart: always

  mariadb:
    container_name: mariadb
    build:
      context: requirements/mariadb
      args:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - data-mariadb:/var/lib/mysql
    networks:
      - default
    restart: always

  adminer:
    container_name: adminer
    image: adminer
    networks:
      - default
    ports:
      - 8080:8080
    depends_on:
      - mariadb
    restart: always

  static:
    container_name: static
    build:
      context: requirements/static
    networks:
      - default
    ports:
      - 80:80
    restart: always

  node:
    container_name: node
    build:
      context: requirements/node
    networks:
      - default
    ports:
      - 8000:8000
    restart: always

volumes:

  data-wordpress:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/data/wordpress

  data-mariadb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/data/mariadb

networks:
  default:
    driver: bridge
